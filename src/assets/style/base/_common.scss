.inline-container {
    container-type: inline-size;
}

.dynamic-grid {
    display: grid;
    grid-template-columns:
        [index] 16px
        [first] minmax(120px, 6fr)
        [var1] minmax(120px, 4fr)
        [var2] minmax(120px, 3fr)
        [last] minmax(120px, 1fr);
    gap: 16px;

    & > * {
        place-self: center start;
    }

    & > *:first-child {
        place-self: center end;
    }

    @container (max-width: 800px) {
        grid-template-columns:
            [index] 16px
            [first] minmax(120px, 4fr)
            [var1] minmax(120px, 2fr)
            [last] minmax(120px, 1fr);
        
        .date-added {
            display: none;
        }
    }
}

.btn {
    @include btn();
}

.btn-tinted {
    @include tinted;
    @include btn();

    &:hover {
        background-color: $tintedBgClrHighlight;
    }
}

.btn-medium {
    @include medium;
    @include btn($circleSize: 32px);
}

.btn-medium-hover-white {
    @include medium;
    @include btn($circleSize: 32px);

    &:hover {
        @include transparent;
    }
}

.btn-medium-with-hover {
    @include medium;
    @include btn($circleSize: 32px);

    &:hover {
        background-color:  $tintedBgClr;
    }
}

.btn-primary-transparent-small {
    @include transparent;
    @include btn($type: animated, $circleSize: $smallBtnSize);
}

.btn-dark {
    @include dark1;
    @include btn;
}

.btn-dark2 {
    @include dark2;
    @include btn($circleSize: $stdBtnSize);

    &:hover {
        fill:  $primaryTxtClr;
        color:  $primaryTxtClr;
    }

    &:active {
        fill: $pressedTxtClr;
        color: $pressedTxtClr;
    }
}

.btn-dark2-small {
    @include dark2;
    @include btn($circleSize: $smallBtnSize);

    &:hover {
        fill:  $primaryTxtClr;
        color:  $primaryTxtClr;
    }

    &:active {
        fill: $pressedTxtClr;
        color: $pressedTxtClr;
    }
}

.btn-dark2-simple {
    @include dark2;
    @include btn($circleSize: $stdBtnSize);
    transition: none;

    &:hover {
        fill:  $primaryTxtClr;
        color:  $primaryTxtClr;
    }
}

.btn-light {
    @include light;
    @include btn;
}

.btn-green {
    @include green;
    @include btn($type: animated, $size: big);

    &:active {
        background-color: $buttonBgGreenPress;
    }
}

.btn-v {
    background-color: transparent;
    fill: $buttonBgGreen;
    @include btn($type: animated, $circleSize: 30px);

    &:active {
        fill: $buttonBgGreenPress;
    }
}

.btn-v-small {
    background-color: transparent;
    fill: $buttonBgGreen;
    @include btn($type: animated, $circleSize: 16px);

    &:active {
        fill: $buttonBgGreenPress;
    }
}

.text-normal {
    font-size: $textSizeBase;
    font-weight: 400;
}

.text-medium {
    font-size: $textSizeBase;
    font-weight: 700;
    color: $mediumTxtClr;
}

.title-medium {
    font-family: SprintifyUITitle;
    font-size: $textSizeLarger1;
    font-weight: 700;
}

.disabled {
    opacity: 0.6;
}

.icon {
    @include icon;
}

.content-spacing {
    width: 100%;
    padding: 0 $sectionPaddingInline;
}

.padded-top-rounded-box {
    padding: $sectionPaddingInline $sectionPaddingBlock;
    border-top-left-radius: $sectionBorderRadius;
    border-top-right-radius: $sectionBorderRadius;
}

.svg-small2 {
    width: $svgSizeSmall2;
    height: $svgSizeSmall2;
}

.svg-small1 {
    width: $svgSizeSmall1;
    height: $svgSizeSmall1;
}

.svg-normal {
    width: $svgSizeBase;
    height: $svgSizeBase;
}

.svg-big1 {
    width: $svgSizeLarge1;
    height: $svgSizeLarge1;
}

.svg-big2 {
    width: $svgSizeLarge2;
    height: $svgSizeLarge2;
}

.hide {
    display: none;
}
