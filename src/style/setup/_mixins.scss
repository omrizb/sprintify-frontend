/* Media queries Breakpoint mixins */

@mixin mobile-layout {
    @media (max-width: $breakNarrow) {
        @content;
    }
}
  
@mixin narrow-layout {
    @media (min-width: $breakNarrow) {
        @content;
    }
}
  
@mixin normal-layout {
    @media (min-width: $breakNormal) {
        @content;
    }
}
  
@mixin wide-layout {
    @media (min-width: $breakWide) {
        @content;
    }
}

//aspect ratio mixin
@mixin aspect-ratio($width: 1, $height: 1) {
    position: relative;
    overflow: hidden;

    &:before {
        content: "";
        display: block;
        width: 100%;
        padding-top: calc(($height / $width) * 100%);
    }

    >* {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }

    >img {
        height: 100%;
        object-fit: cover;
    }
}
  
// Mixin for removing hover effects on iphone screen
@mixin hover-supported {
    @media not all and (pointer: coarse) {
        &:hover {
            @content;
        }
    }
}

// Color schemes
@mixin tinted {
    color: $primaryTxtClr;
    background-color: $tintedBgClr;

    &:hover {
        background-color: $tintedBgClrHighlight;
    }
}

@mixin dark {
    color: $primaryTxtClr;
    background-color: $darkBgClr;
}

@mixin light {
    color: $lightTxtClr;
    background-color: $lightBgClr;
}
  
// Buttons
  
@mixin btn($type: regular) {

    display: inline-flex;
    align-items: center;

    height: 32px;
    padding: $smallPadding;
    border-radius: 100vh;
    border: none;

    line-height: 1.5;
    text-decoration: none;
    font-family: inherit;
    font-size: em(14px);
    font-weight: 300;

    cursor: pointer;
    
    transition: background-color 0.2s, color 0.2s;

    @if $type == animated {
        &:hover {
            transform: scale(1.05)
        }

        &:active {
            transform: scale(1);
        }
    }
}

// section
@mixin section {
    padding: $sectionPaddingInline $sectionPaddingBlock;
    border-radius: $sectionBorderRadius;
    background-color: $sectionBgClr;
}

// Type
  
@mixin type($type: bold) {

    // type options: 
    // 1.bold 
    // 2.boldCondensed 
    // 3.condensed
    @if $type == bold {
        font-variation-settings: "wght" 430;
    }

    @else if $type == boldCondensed {
        font-variation-settings: "wght" 430, "wdth" 80;
        letter-spacing: em(6.72px);
    }

    @else if $type == condensed {
        font-variation-settings: "wdth" 80;
        letter-spacing: em(6.72px);
    }

    @else if $type == light {
        font-variation-settings: "wght" 200;
    }
}